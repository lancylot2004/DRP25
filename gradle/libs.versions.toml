[versions]
agp = "8.10.1"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
appyx = "2.0.1"
arrow = "1.2.4"
compose-multiplatform = "1.7.3"
detekt = "1.23.8"
haze = "0.7.1"
junit = "4.13.2"
kamel = "1.0.5"
kotlin = "2.0.21"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.8.1"
ktor = "3.1.3"
lucide = "1.0.0"
material3 = "1.6.10"
realm = "3.0.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "material3" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

# https://github.com/bumble-tech/appyx
appyx-interactions = { module = "com.bumble.appyx:appyx-interactions", version.ref = "appyx" }
appyx-navigation = { module = "com.bumble.appyx:appyx-navigation", version.ref = "appyx" }
appyx-backstack = { module = "com.bumble.appyx:backstack", version.ref = "appyx" }
appyx-spotlight = { module = "com.bumble.appyx:spotlight", version.ref = "appyx" }
appyx-material3 = { module = "com.bumble.appyx:utils-material3", version.ref = "appyx" }
appyx-multiplatform = { module = "com.bumble.appyx:utils-multiplatform", version.ref = "appyx" }

# https://arrow-kt.io/
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }

# https://github.com/chrisbanes/haze
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }

# https://github.com/composablehorizons/composeicons/tree/main/icons-lucide
composables-icons-lucide = { module = "com.composables:icons-lucide", version.ref = "lucide" }

# https://github.com/ktorio/ktor
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-ws = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# https://github.com/Kamel-Media/Kamel
kamel-image = { module = "media.kamel:kamel-image-default", version.ref = "kamel" }

# https://github.com/realm/realm-kotlin
realm-base = { module = "io.realm.kotlin:library-base", version.ref = "realm" }
realm-sync = { module = "io.realm.kotlin:library-sync", version.ref = "realm" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
realm = { id = "io.realm.kotlin", version.ref = "realm" }
